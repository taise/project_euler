/*
 * Even Fibonacci numbers
 * Problem 2
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence
 * whose values do not exceed four million, find the sum of the even-valued terms.
 */

struct Fibonacci {
   current: i32,
   next: i32,
}

fn calc(fibo: Fibonacci) -> Fibonacci {
    let next = fibo.current + fibo.next;
    return Fibonacci { current: fibo.next, next: next};
}

fn main() {
   let mut fibo = Fibonacci { current: 1, next: 1 };
   let mut sum: i32 = 0;

   let mut done: bool = false;

   while !done {
       fibo = calc(fibo);

       if fibo.next % 2 == 0 {
           sum += fibo.next;
       }

       if fibo.next > 4000000 {
           done = true
       }
   }
   print!("{}", sum);
}
